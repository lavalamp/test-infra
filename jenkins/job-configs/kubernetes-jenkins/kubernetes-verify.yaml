- job-template:
    name: 'kubernetes-verify-{suffix}'
    description: |
        Grab the latest from GitHub, then run unit and integration tests.<br>
        Test Owner: Build Cop
    properties:
        - build-discarder:
            num-to-keep: 200
    node: unittest
    builders:
        - shell: 'JENKINS_BUILD_STARTED=true bash <(curl -fsS --retry 3 "https://raw.githubusercontent.com/kubernetes/kubernetes/master/hack/jenkins/upload-to-gcs.sh")'
        - shell: |
            export KUBE_FORCE_VERIFY_CHECKS='y'
            export KUBE_VERIFY_GIT_BRANCH='{branch}'
            export KUBE_TEST_SCRIPT="./hack/jenkins/verify-dockerized.sh"
            timeout -k {kill-timeout}m {timeout}m ./hack/jenkins/gotest-dockerized.sh && rc=$? || rc=$?
            {report-rc}
    publishers:
        - claim-build
        - log-parser
        - email-ext
        - xunit:
            thresholds:
                - failed:
                    unstable: 0
                    unstablenew: 0
                    failure:
                    failurenew:
                - skipped:
                    unstable:
                    unstablenew:
                    failure:
                    failurenew:
            types:
                - junit:
                    pattern: '_artifacts/**.xml'
                    deleteoutput: false
        - gcs-uploader
    scm:
        - git:
            url: https://github.com/kubernetes/kubernetes
            branches:
                - '{branch}'
            browser: githubweb
            browser-url: https://github.com/kubernetes/kubernetes
            wipe-workspace: false
            skip-tag: true
    triggers:
        - pollscm:
            cron: 'H/2 * * * *'
        - timed: '{cron-string}'
    wrappers:
        - ansicolor:
            colormap: xterm
        - timeout:
            timeout: '{jenkins-timeout}'
            fail: true
        - timestamps
        - workspace-cleanup:
            dirmatch: true
            external-deletion-command: 'sudo rm -rf %s'

- project:
    name: kubernetes-verify
    suffix:
        - 'master':
            branch: 'master'
            cron-string: '{sq-cron-string}'
            timeout: 100
        - 'release-1.3':
            branch: 'release-1.3'
            cron-string: '{sq-cron-string}'
            timeout: 100
        - 'release-1.2':
            branch: 'release-1.2'
            # Every 3 hours
            cron-string: 'H H/3 * * *'
            timeout: 100
        - 'release-1.1':
            branch: 'release-1.1'
            # Every 6 hours
            cron-string: 'H H/12 * * *'
            timeout: 60
    jobs:
        - 'kubernetes-verify-{suffix}'
